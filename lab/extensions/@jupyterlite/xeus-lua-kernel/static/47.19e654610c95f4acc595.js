"use strict";(self.webpackChunk_jupyterlite_xeus_lua_kernel=self.webpackChunk_jupyterlite_xeus_lua_kernel||[]).push([[47],{47:(e,s,t)=>{t.r(s),t.d(s,{default:()=>l});var a=t(635),i=t(890),r=t(168),n=t(797);class o{constructor(e){this._isDisposed=!1,this._disposed=new r.Signal(this),this._executeDelegate=new n.PromiseDelegate,this._parentHeader=void 0,this._parent=void 0;const{id:s,name:a,sendMessage:i}=e;this._id=s,this._name=a,this._sendMessage=i,this._worker=new Worker(new URL(t.p+t.u(213),t.b)),this._worker.onmessage=e=>{this._processWorkerMessage(e.data)}}async handleMessage(e){this._parent=e,this._parentHeader=e.header,await this._sendMessageToWorker(e)}async _sendMessageToWorker(e){if("input_reply"!==e.header.msg_type&&(this._executeDelegate=new n.PromiseDelegate),this._worker.postMessage({msg:e,parent:this.parent}),"input_reply"!==e.header.msg_type)return await this._executeDelegate.promise}get parentHeader(){return this._parentHeader}get parent(){return this._parent}_processWorkerMessage(e){var s,t,a,r,n,o,d;if("special_input_request"===e.type){const r=i.KernelMessage.createMessage({channel:"stdin",msgType:"input_request",session:null!==(t=null===(s=this._parentHeader)||void 0===s?void 0:s.session)&&void 0!==t?t:"",parentHeader:this._parentHeader,content:null!==(a=e.content)&&void 0!==a?a:{prompt:"",password:!1}});this._sendMessage(r)}else e.header.session=null!==(n=null===(r=this._parentHeader)||void 0===r?void 0:r.session)&&void 0!==n?n:"",e.session=null!==(d=null===(o=this._parentHeader)||void 0===o?void 0:o.session)&&void 0!==d?d:"",this._sendMessage(e);"status"===e.type&&"idle"===e.content.execution_state&&this._executeDelegate.resolve()}get ready(){return Promise.resolve()}get isDisposed(){return this._isDisposed}get disposed(){return this._disposed}dispose(){this.isDisposed||(this._isDisposed=!0,this._disposed.emit(void 0))}get id(){return this._id}get name(){return this._name}}const d=t.p+"f64815cfa6dda2af6b3518688380f849.png",p=t.p+"ef04946322537d832f3fad9e57f58276.png",l=[{id:"@jupyterlite/xeus-kernel-extension:kernel",autoStart:!0,requires:[a.IKernelSpecs],activate:(e,s)=>{s.register({spec:{name:"Lua",display_name:"Lua",language:"lua",argv:[],spec:{argv:[],env:{},display_name:"Lua",language:"lua",interrupt_mode:"message",metadata:{}},resources:{"logo-32x32":d,"logo-64x64":p}},create:async e=>new o({...e})})}}]}}]);